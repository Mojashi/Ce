
import "stl/integer.ce"

struct Box:(SysInt W, SysInt SIZE){
    Integer:(SIZE) mat[W][W], Max, Min;
    Prop{
        Max = toInteger(W*W,SIZE);
        Min = toInteger(0,SIZE);

        for(i,W*W){
            [-mat[i/W][i%W].overflow];
            mat[i/W][i%W] <= Max;
            mat[i/W][i%W] > Min;

            for(j,i+1,W*W){
                mat[i/W][i%W] != mat[j/W][j%W];
            }
        }
    }
}

struct Row:(SysInt W, SysInt SIZE){
    Box:(W,SIZE) mat[W];

    Prop{
        for(i,W){
            for(j,W*W){
            for(k,j + 1, W*W){
                mat[j/W].mat[i][j%W] != mat[k/W].mat[i][k%W];
        }}}
    }
}

struct ASudoku:(SysInt W, SysInt SIZE){
    Row:(W,SIZE) mat[W];
    
    Prop{
        for(i,W*W){
            for(j,W*W){
            for(k,j + 1, W*W){
                mat[j/W].mat[i/W].mat[j%W][i%W] != mat[k/W].mat[i/W].mat[k%W][i%W];
        }}}
    }

    void set(SysInt i, SysInt j, Integer x){
        mat[i/W][j/W].mat[i%W][j%W] = x;
    }
}

ASudoku:(4,5) sudoku;
void main(){
}